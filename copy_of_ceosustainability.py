# -*- coding: utf-8 -*-
"""Copy of ceosustainability.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w1QjinhoyoBMHX0jv1hyGOZ7fCIMhl_e
"""

from google.colab import files

uploaded = files.upload()

import pandas as pd
df = pd.read_csv('New Annual Report Transcript Database - 2022 (1).csv',header=0)

company_names = []
year = []
industry = []
ceo_name22 = []
ticker_symbols = []
speech_transcripts22 = []
ebitdaRatio22 = []
revenue22 = []
economic_scores22 = []
sustainability_scores22 = []
society_scores22 = []
word_count22 = []
ebitda = 1
revenue = 1
econ_words = [
    "PROFIT",
    "SALE",
    "SALES",
    "PROFITS",
    "PROFITABILITY",
    "CAPITAL",
    "REVENUE",
    "REVENUES"
    "EBITDA",
    "YIELD",
    "YIELDS",
    "GAINS",
    "EARNING",
    "EARNINGS",
    "INCOME",
    "MARGIN",
    "MARGINS",
    "EBIT"
]
sustainability_word = [
    "SUSTAINABILITY",
    "SUSTAINABLE",
    "ENVIRONMENT",
    "ESG",
    "GREEN",
    "CARBON",
    "EMISSION",
    "EMISSIONS",
    "CONSERVATION",
    "RECYCLE",
    "RECYCLING",
    "EFFICIENT",
    "ENVIRONMENTALLY",
    "ENERGY"
]
society_words = [
    "COMMUNITY",
    "PEOPLE",
    "PATIENT"
    "PATIENTS",
    "PUBLIC",
    "WELFARE",
    "CITIZEN",
    "SERVICE",
    "SERVE",
    "OUTREACH",
    "RESPONSIBLE",
    "SOCIAL",
    "SOCIETY"
]

for i in range(0, 97):
  for j in range(0,7):
    if j == 1:
      company_names.append(df.iat[i,j])
    if j == 0:
      ceo_name22.append(df.iat[i,j])
    if j == 3:
      industry.append(df.iat[i,j])
    if j == 2:
      ticker_symbols.append(df.iat[i,j])
    if j == 6:
      speech_transcripts22.append(df.iat[i,j])
    if j == 4:
      ebitda = df.iat[i,j]
    if j == 5:
      revenue = df.iat[i,j]
      revenue22.append(revenue)
      ebitdaRatio22.append(int(ebitda)/int(revenue))
      year.append(2022)
for i in range(0, len(speech_transcripts22)):
  econ_score = 0
  sus_score = 0
  soc_score = 0
  words = []
  words = str(speech_transcripts22[i]).upper().split()
  for j in range(0, len(words)):
    if words[j] in econ_words:
      econ_score += 1
    if words[j] in sustainability_word:
      sus_score += 1
    if words[j] in society_words:
      soc_score += 1
  economic_scores22.append(econ_score)
  sustainability_scores22.append(sus_score)
  society_scores22.append(soc_score)
  word_count22.append(len(words))

from google.colab import files

uploaded = files.upload()

import pandas as pd
df21 = pd.read_csv('New Annual Report Transcript Database - 2021 (2).csv',header=0)

speech_transcripts21 = []
ebitdaRatio21 = []
economic_scores21 = []
sustainability_scores21 = []
society_scores21 = []
word_count21 = []
revenue21 = []
ceo_name21 = []

for i in range(0, 97):
  ebitda = 0
  revenue = 0
  for j in range(0,7):
    if j == 0:
      ceo_name21.append(df21.iat[i,j])
    if j == 6:
      speech_transcripts21.append(df21.iat[i,j])
    if j == 4:
      ebitda = df21.iat[i,j]
    if j == 5:
      revenue = df.iat[i,j]
      revenue21.append(revenue)
      ebitdaRatio21.append(int(ebitda)/int(revenue))
      year.append(2021)
for i in range(0, len(speech_transcripts21)):
  econ_score = 0
  sus_score = 0
  soc_score = 0
  words = []
  words = str(speech_transcripts21[i]).upper().split()
  for j in range(0, len(words)):
   if words[j] in econ_words:
      econ_score += 1
   if words[j] in sustainability_word:
      sus_score += 1
   if words[j] in society_words:
      soc_score += 1
  economic_scores21.append(econ_score)
  sustainability_scores21.append(sus_score)
  society_scores21.append(soc_score)
  word_count21.append(len(words))

from google.colab import files

uploaded = files.upload()

import pandas as pd
df = pd.read_csv('New Annual Report Transcript Database - 2020 (1).csv',header=0)

speech_transcripts20 = []
ebitdaRatio20 = []
economic_scores20 = []
sustainability_scores20 = []
society_scores20 = []
word_count20 = []
revenue20 = []
ceo_name20 = []

for i in range(0, 97):
  for j in range(0,7):
    if j == 0:
      ceo_name20.append(df.iat[i,j])
    if j == 6:
      speech_transcripts20.append(df.iat[i,j])
    if j == 4:
      ebitda = df.iat[i,j]
    if j == 5:
      revenue = df.iat[i,j]
      revenue20.append(revenue)
      ebitdaRatio20.append(int(ebitda)/int(revenue))
      year.append(2020)
for i in range(0, len(speech_transcripts21)):
  econ_score = 0
  sus_score = 0
  soc_score = 0
  words = []
  words = str(speech_transcripts20[i]).upper().split()
  for j in range(0, len(words)):
    if words[j] in econ_words:
      econ_score += 1
    if words[j] in sustainability_word:
      sus_score += 1
    if words[j] in society_words:
      soc_score += 1
  economic_scores20.append(econ_score)
  sustainability_scores20.append(sus_score)
  society_scores20.append(soc_score)
  word_count20.append(len(words))

from google.colab import files

uploaded = files.upload()

import pandas as pd
df = pd.read_csv('New Annual Report Transcript Database - 2019 (2).csv',header=0)

speech_transcripts19 = []
ebitdaRatio19 = []
economic_scores19 = []
sustainability_scores19 = []
society_scores19 = []
word_count19 = []
revenue19 = []
ceo_name19 = []

for i in range(0, 97):
  for j in range(0,7):
    if j == 0:
      ceo_name19.append(df.iat[i,j])
    if j == 6:
      speech_transcripts19.append(df.iat[i,j])
    if j == 4:
      ebitda = df.iat[i,j]
    if j == 5:
      revenue = df.iat[i,j]
      revenue19.append(revenue)
      ebitdaRatio19.append(int(ebitda)/int(revenue))
      year.append(2019)
for i in range(0, len(speech_transcripts21)):
  econ_score = 0
  sus_score = 0
  soc_score = 0
  words = []
  words = str(speech_transcripts19[i]).upper().split()
  for j in range(0, len(words)):
    if words[j] in econ_words:
      econ_score += 1
    if words[j] in sustainability_word:
      sus_score += 1
    if words[j] in society_words:
      soc_score += 1
  economic_scores19.append(econ_score)
  sustainability_scores19.append(sus_score)
  society_scores19.append(soc_score)
  word_count19.append(len(words))

from google.colab import files

uploaded = files.upload()

import pandas as pd
df = pd.read_csv('New Annual Report Transcript Database - 2018 (2).csv',header=0)

speech_transcripts18 = []
ebitdaRatio18 = []
economic_scores18 = []
sustainability_scores18 = []
society_scores18 = []
revenue18 = []
word_count18 = []
ceo_name18 = []

for i in range(0, 97):
  for j in range(0,7):
    if j == 0:
      ceo_name18.append(df.iat[i,j])
    if j == 6:
      speech_transcripts18.append(df.iat[i,j])
    if j == 4:
      ebitda = df.iat[i,j]
    if j == 5:
      revenue = df.iat[i,j]
      revenue18.append(revenue)
      ebitdaRatio18.append(int(ebitda)/int(revenue))
      year.append(2018)
for i in range(0, len(speech_transcripts18)):
  econ_score = 0
  sus_score = 0
  soc_score = 0
  words = []
  words = str(speech_transcripts18[i]).upper().split()
  for j in range(0, len(words)):
    if words[j] in econ_words:
      econ_score += 1
    if words[j] in sustainability_word:
      sus_score += 1
    if words[j] in society_words:
      soc_score += 1
  economic_scores18.append(econ_score)
  sustainability_scores18.append(sus_score)
  society_scores18.append(soc_score)
  word_count18.append(len(words))

from google.colab import files

uploaded = files.upload()

import pandas as pd
df = pd.read_csv('New Annual Report Transcript Database - 2017.csv',header=0)

speech_transcripts17 = []
ebitdaRatio17 = []
economic_scores17 = []
revenue17 = []
sustainability_scores17 = []
society_scores17 = []
word_count17 = []
ceo_name17 = []

for i in range(0, 97):
  for j in range(0,7):
    if j == 0:
      ceo_name17.append(df.iat[i,j])
    if j == 6:
      speech_transcripts17.append(df.iat[i,j])
    if j == 4:
      ebitda = df.iat[i,j]
    if j == 5:
      revenue = df.iat[i,j]
      revenue17.append(revenue)
      ebitdaRatio17.append(int(ebitda)/int(revenue))
      year.append(2017)
for i in range(0, len(speech_transcripts17)):
  econ_score = 0
  sus_score = 0
  soc_score = 0
  words = []
  words = str(speech_transcripts17[i]).upper().split()
  for j in range(0, len(words)):
    if words[j] in econ_words:
      econ_score += 1
    if words[j] in sustainability_word:
      sus_score += 1
    if words[j] in society_words:
      soc_score += 1
  economic_scores17.append(econ_score)
  sustainability_scores17.append(sus_score)
  society_scores17.append(soc_score)
  word_count17.append(len(words))

data = {'Company': company_names, 'Ticker Symbol': ticker_symbols, '2022 CEO': ceo_name22, '2021 CEO': ceo_name21, '2020 CEO': ceo_name20,'2019 CEO': ceo_name19, '2018 CEO': ceo_name18, '2017 CEO': ceo_name17, '2022 EBITDA RATIO': ebitdaRatio22, '2021 EBITDA RATIO': ebitdaRatio21, '2020 EBITDA RATIO': ebitdaRatio20, '2019 EBITDA RATIO': ebitdaRatio19, '2018 EBITDA RATIO': ebitdaRatio18, '2017 EBITDA RATIO': ebitdaRatio17, '2022 ECON SCORE': economic_scores22,'2021 ECON SCORE': economic_scores21, '2020 ECON SCORE': economic_scores20, '2019 ECON SCORE': economic_scores19, '2018 ECON SCORE': economic_scores18, '2017 ECON SCORE': economic_scores17, '2022 SUSTAINABILITY SCORE': sustainability_scores22, '2021 SUSTAINABILITY SCORE': sustainability_scores21, '2020 SUSTAINABILITY SCORE': sustainability_scores20, '2019 SUSTAINABILITY SCORE': sustainability_scores19, '2018 SUSTAINABILITY SCORE': sustainability_scores18, '2017 SUSTAINABILITY SCORE': sustainability_scores17, '2022 SOCIETY SCORE': society_scores22, '2021 SOCIETY SCORE': society_scores21, '2020 SOCIETY SCORE': society_scores20, '2019 SOCIETY SCORE': society_scores19, '2018 SOCIETY SCORE': society_scores18, '2017 SOCIETY SCORE': society_scores17, 'WORD COUNT 22': word_count22, 'WORD COUNT 21': word_count21, 'WORD COUNT 20': word_count20, 'WORD COUNT 19': word_count19, 'WORD COUNT 18': word_count18, 'WORD COUNT 17': word_count17,'INDUSTRY': industry  }
data_set = pd.DataFrame(data=data)
print(data_set)

from google.colab import drive
drive.mount('/content/drive')
path = '/content/drive/My Drive/output10.csv'
with open(path, 'w', encoding = 'utf-8-sig') as f:
  data_set.to_csv(f)

from google.colab import files

uploaded = files.upload()

import pandas as pd
df = pd.read_csv("final.csv", error_bad_lines=False, header = 0)

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import statsmodels.api as sm
from sklearn.preprocessing import PolynomialFeatures

print(df)

ebitdaRatio = df[['2022 EBITDA RATIO', '2021 EBITDA RATIO', '2020 EBITDA RATIO', '2019 EBITDA RATIO', '2018 EBITDA RATIO', '2017 EBITDA RATIO']].values.flatten()
economic = df[[ '2022 ECON SCORE', '2021 ECON SCORE', '2020 ECON SCORE', '2019 ECON SCORE', '2018 ECON SCORE', '2017 ECON SCORE']].values.flatten()
sustainability = df[['2022 SUSTAINABILITY SCORE', '2021 SUSTAINABILITY SCORE', '2020 SUSTAINABILITY SCORE','2019 SUSTAINABILITY SCORE', '2018 SUSTAINABILITY SCORE', '2017 SUSTAINABILITY SCORE']].values.flatten()
society = df[['2022 SOCIETY SCORE', '2021 SOCIETY SCORE', '2020 SOCIETY SCORE','2019 SOCIETY SCORE', '2018 SOCIETY SCORE', '2017 SOCIETY SCORE']].values.flatten()
wordcount = df[['WORD COUNT 22', 'WORD COUNT 21', 'WORD COUNT 20','WORD COUNT 19', 'WORD COUNT 18', 'WORD COUNT 17']].values.flatten()
year = df[['2022', '2021', '2020','2019', '2018', '2017']].values.flatten()
industry = df[['INDUSTRY', 'INDUSTRY', 'INDUSTRY', 'INDUSTRY', 'INDUSTRY', 'INDUSTRY']].values.flatten()
rev = df[['2022 REVENUE', '2021 REVENUE', '2020 REVENUE','2019 REVENUE', '2018 REVENUE', '2017 REVENUE']].values.flatten()

ceo_name22 = df[['2022 CEO']].values.flatten()
ceo_name21 = df[['2021 CEO']].values.flatten()
ceo_name20 = df[['2020 CEO']].values.flatten()
ceo_name19 = df[['2019 CEO']].values.flatten()
ceo_name18 = df[['2018 CEO']].values.flatten()
ceo_name17 = df[['2017 CEO']].values.flatten()

rev = np.array(rev)
ceo_name_change = []


for i in range(0, len(ceo_name22)):
  if str(ceo_name22[i]).upper() != str(ceo_name21[i]).upper() :
    ceo_name_change.append(1)
  else:
    ceo_name_change.append(0)

for i in range(0, len(ceo_name21)):
  if str(ceo_name21[i]).upper() != str(ceo_name20[i]).upper() :
    ceo_name_change.append(1)
  else:
    ceo_name_change.append(0)

for i in range(0, len(ceo_name20)):
  if str(ceo_name20[i]).upper() != str(ceo_name19[i]).upper() :
    ceo_name_change.append(1)
  else:
    ceo_name_change.append(0)


for i in range(0, len(ceo_name19)):
  if str(ceo_name19[i]).upper() != str(ceo_name18[i]).upper() :
    ceo_name_change.append(1)
  else:
    ceo_name_change.append(0)

for i in range(0, len(ceo_name18)):
  if str(ceo_name18[i]).upper() != str(ceo_name17[i]).upper():
    ceo_name_change.append(1)
  else:
    ceo_name_change.append(0)

for i in range(0, len(ceo_name17)):
  ceo_name_change.append(0)

print(ceo_name_change)
for i in range(0,581):
  if (ebitdaRatio[i] > 1) | (ebitdaRatio[i] < -1):
    ebitdaRatio = np.delete(ebitdaRatio, i)
    economic = np.delete(economic, i)
    sustainability = np.delete(sustainability, i)
    society = np.delete(society, i)
    wordcount = np.delete(wordcount, i)
    industry = np.delete(industry, i)
    ceo_name_change = np.delete(ceo_name_change, i)
    year = np.delete(year, i)
    rev = np.delete(rev, i)
    i-=1
industry_numbers = []
industry_categories = np.unique(industry)

for i in range(0, len(industry)):
    for j in range(0, len(industry_categories)):
      if industry[i] == industry_categories[j]:
        industry_numbers.append(j + 1)
        break

X = np.array(economic/wordcount).reshape(-1,1)
rev = np.array(rev).reshape(-1,1)
year = np.array(year).reshape(-1,1)
industry_numbers = np.array(industry_numbers).reshape(-1,1)
ceo_name_change = np.array(industry_numbers).reshape(-1,1)

y = ebitdaRatio
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)


# Create and fit a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate Mean Squared Error
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Plot the data and regression line
plt.scatter(X_test, y_test, label='Points')
plt.plot(X_test, y_pred, color='red', label='Regression line')
plt.ylabel('EBITDA Ratio')
plt.xlabel('Profitability Attitude')
plt.title('EBITDA Ratio v.s. Letter to Shareholder Profitability Wordcount')
plt.legend()
plt.show()

# Add a constant term to the independent variable matrix
X_with_controls = sm.add_constant(np.concatenate((X, year, rev, industry_numbers, ceo_name_change), axis=1))

# Create and fit a linear regression model
model = sm.OLS(y, X_with_controls).fit()
summary = model.summary()
print(summary)

beginningtex = """\\documentclass{report}
\\usepackage{booktabs}
\\begin{document}"""
endtex = "\end{document}"

f = open('myreg.tex', 'w')
f.write(beginningtex)
f.write(model.summary().as_latex())
f.write(endtex)
f.close()

# Create polynomial features
degree = 2
poly = PolynomialFeatures(degree)
X_train_poly = poly.fit_transform(X_train)
X_test_poly = poly.transform(X_test)

# Create and fit a polynomial regression model
model = LinearRegression()
model.fit(X_train_poly, y_train)

# Make predictions
y_pred = model.predict(X_test_poly)

# Add a constant term to the independent variable matrix
X_with_const = sm.add_constant(np.concatenate((X, X**2, year, rev, industry_numbers, ceo_name_change), axis=1))

# Create and fit a linear regression model

model = sm.OLS(y, X_with_const).fit()
print(model.summary())

# Get the p-values for the coefficients
p_values = model.pvalues

# Print the p-values
print("P-values:", p_values)

# Plot the data and regression line
plt.scatter(X_test, y_test, label='Economic')
plt.plot(X_test, y_pred, color='red', label='Regression Line')
plt.xlabel('Economic 22-17')
plt.ylabel('EBITDA Ratio')
plt.title('Polynomial Regression')
plt.legend()
plt.show()

import statistics

max(sustainability+society)